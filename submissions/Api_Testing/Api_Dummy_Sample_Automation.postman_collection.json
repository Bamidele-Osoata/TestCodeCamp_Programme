{
	"info": {
		"_postman_id": "27860a57-9344-4623-93f9-c1761bd72f84",
		"name": "Api_Dummy_Sample_Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "USERS",
			"item": [
				{
					"name": "Get",
					"item": [
						{
							"name": "Get users id2 (single user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"janet\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/users/2",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								},
								"description": "https://reqres.in/api/users/2"
							},
							"response": []
						},
						{
							"name": "list users on page2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"email\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/api/users?page=2",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										}
									]
								},
								"description": "https://reqres.in/api/users?page=2"
							},
							"response": []
						}
					]
				},
				{
					"name": "Post",
					"item": [
						{
							"name": "Create new record in user data base",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"baseurl\", \"https://reqres.in\");",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"id\");",
											"});",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/user",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"user"
									]
								},
								"description": "https://reqres.in/api/user\n\n{{baseurl}}/api/user"
							},
							"response": []
						},
						{
							"name": "create user morpheus",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"morpheus\",\n\"job\":\"leader\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/users",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"users"
									]
								},
								"description": "create user morpheus"
							},
							"response": []
						},
						{
							"name": "user login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"server\");",
											"});",
											"pm.test(\"Status code name has string\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"eve.holt@reqres.in\",\n\"password\":\"cityslicka\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"login"
									]
								},
								"description": "{{baseurl/api/login}}"
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "update a user record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"updatedAt\");",
											"});",
											"pm.test(\"Response time is less than 300ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(300);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/user/2",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"user",
										"2"
									]
								},
								"description": "{{baseurl}}/api/user/2"
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "delete a new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"pm.test(\"Response time is less than 300ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(300);",
											"});",
											"pm.test(\"Status code name has No Content string\", function () {",
											"    pm.response.to.have.status(\"No Content\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/users/2",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								},
								"description": "{{baseurl}}/api/users/2"
							},
							"response": []
						},
						{
							"name": "delete a user record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"pm.test(\"Response time is less than 300ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(300);",
											"});",
											"pm.test(\"Status code name has No Content string\", function () {",
											"    pm.response.to.have.status(\"No Content\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/api/users/2",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								},
								"description": "{{baseurl}}/api/users/2"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "TODO",
			"item": [
				{
					"name": "Get",
					"item": [
						{
							"name": "get all todo entries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Task 12\");",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Date\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{todobaseurl}}/index.php/todo",
									"host": [
										"{{todobaseurl}}"
									],
									"path": [
										"index.php",
										"todo"
									]
								},
								"description": "https://demo.fusio-project.org/index.php/todo"
							},
							"response": []
						},
						{
							"name": "get single todo entries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"totalResults\");",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Connection\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{todobaseurl}}/index.php/todo/?todo_id=2",
									"host": [
										"{{todobaseurl}}"
									],
									"path": [
										"index.php",
										"todo",
										""
									],
									"query": [
										{
											"key": "todo_id",
											"value": "2"
										}
									]
								},
								"description": "https://demo.fusio-project.org/index.php/todo/?todo_id=2"
							},
							"response": []
						}
					]
				}
			]
		}
	]
}